@import "bourbon";

.Board {
  // margin: 0 auto;
  // width: 90vw;
  // height: 90vh;
  margin: 100%;
}

.timer {
  position: fixed;
  top: 100px;
  right: 8px;
  color: white;
  z-index: 200;
}

.controls {
  position: fixed;
  top: 200px;
  right: 8px;
  color: white;
  z-index: 200;
}

.objectives {
  position: fixed;
  top: 0;
  right: 0;
  z-index: 200;
  height: 100px;
  // background-color: white;
  // margin: 20px 40px;
  // border-radius: 5px;
}

.objective {
  height: 60px;
}

.exit {
  height: 80px;
}

.objective, .exit {
  z-index: 200;
  margin: 20px 5px;
  border: 3px solid white;
  border-radius: 5%;
  transform: all 300ms;

  &.stolen, &.escaped {
    filter: brightness(0.2);
    border: none;
  }
}


.playable-area {
  position: relative;
  display: grid;
  justify-items: center;
  justify-content: center;
  align-content: center;
  grid-template-columns: repeat(15, auto);
  grid-template-rows: repeat(15, auto);
}

.tile {
  overflow: visible;
  width: 185px;
  height: 185px;
  margin: 14px;
  display: grid;
  grid-template-rows: repeat(4, 25%);
  position: relative;
}

.tile > * {
  background: rgba(0,0,0,0);
}

.tile.start-tile {
  grid-column-start: 8;
  grid-row-start: 8
}

.tile img {
  position: absolute;
  width: 213px;
  height: 213px;
  top: -14px;
  left: -14px;
}

.row {
  display: grid;
  grid-template-columns: repeat(4, 25%);
}

.space {
  box-sizing: border-box;
  position: relative;

  &.active {
    z-index: 3;
    border: 2px solid yellow;
  }

  &.escalator {
    z-index: 3;
    border: 2px solid greenyellow;
  }

  &.teleporter {
    z-index: 3;
    display: flex;
    align-content: center;
    justify-content: center;
    align-items: center;

    .circle-multiple {
      position: relative;
    }
    
    div {
      width: 70%;
      height: 70%;
      border-radius: 50%;
      box-sizing: border-box;
      transition : border 600ms ease-in-out;

      &.purple {
        background-color: rgba(128,0,128,0.2);
      }
  
      &.orange {
        background-color: rgba(255,179,71,0.2);
      }
  
      &.yellow {
        background-color: rgba(255,225,53,0.2);
      }
  
      &.green {
        background-color: rgba(50,205,50,0.2);
      }
    }
  }

  &.disabled-teleporter::after {
    width: 80%;
    height: 80%;
    content: "";
    position: absolute;
    background-color: black;
    opacity: 0.2;
    z-index: 1;
    border-radius: 50%;
    top: 50%;
    left: 50%;
    margin-left: -18.5px;
    margin-top: -18.5px;
  }
}



.new-tile-area {
  box-sizing: border-box;
  border: 2px solid blue;
}

.new-tile-area {
  &.placeholder {
    visibility: hidden;
  }
}


/* TEST */
.pawn-grid {
  // grid-column-start: 8;
  // grid-row-start: 7;
  width: 185px;
  height: 185px;
  // margin: 14px -78.5px 14px 14px;
  display: grid;
  grid-template-rows: repeat(4, 25%);
  grid-template-columns: repeat(4, 25%);
  place-self: center;
  position: relative;
  justify-items: center;
  justify-content: center;
  align-content: center;
}

.pawn {
  // position: absolute;
  width: 46.25px;
  height: 46.25px;
  overflow: visible;
  text-align: center;
  z-index: 2;
}

.pawn img {
  top: -17.5px;
  position: relative;
}


/* PLAYER */

.player-area {
  position: fixed;
  bottom: 0;
  left: 0;
  background-color: rgba(172, 227, 208, 0.8);
  width: 100vw;
  height: 20%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.game-paused {
  display: flex;
  flex-wrap: nowrap;
  align-content: center;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(46, 49, 49, 0.85)
}

#back { // back button
  background-color: #64748B;
}

// NEED TO ESCAPE

.alerts-border {
  box-sizing: border-box;
  border: 5px #ff0000 solid;
  
  animation: blink 1s;
  animation-iteration-count: infinite;
}

@keyframes blink { 
  50% { 
    border-color:#fff ; 
  }  
}

// TELEPORTER ANIMATION


/// border-gradient mixin: ///

@mixin border-gradient($from, $to, $weight: 0) {
  $mix-main: mix($from, $to);
  $mix-sub-from: mix($mix-main, $from);
  $mix-sub-to: mix($mix-main, $to);
  
  box-shadow: 0 6px 0 $weight rgba($mix-sub-to, .25),
              0 -6px 0 $weight rgba($mix-sub-from, .25),
              6px 0 0 $weight rgba($mix-sub-to, .25),
              -6px 0 0 $weight  rgba($mix-sub-from, .25),
              6px -6px 0 $weight rgba($mix-main, .5),
              -6px 6px 0 $weight rgba($mix-main, .5),
              6px 6px 0 $weight rgba($to, .75),
              -6px -6px 0 $weight rgba($from, .75);
}

/// BASIC EXAMPLE ///

.circle {
  @include size(100px);
  
  border-radius: 100%;

  &.purple {
    @include border-gradient(rgb(85, 0, 255), rgb(111, 64, 220));
  }

  &.orange {
    @include border-gradient(rgb(255, 0, 0), rgb(161, 42, 28));
  }

  &.yellow {
    @include border-gradient(rgb(225, 255, 0), rgb(160, 184, 25));
  }

  &.green {
    @include border-gradient(rgb(64, 221, 77), rgb(27, 255, 46));
  }
}


////////////// OTHER EXAMPLES ////////////////


.circle {
  &:nth-of-type(2) {

    &.purple {
      @include border-gradient(rgb(83, 104, 210), rgb(62, 42, 192));
    }
  
    &.orange {
      @include border-gradient(rgb(206, 151, 151), rgb(237, 135, 27));
    }
  
    &.yellow {
      @include border-gradient(rgb(232, 230, 173), rgb(236, 255, 21));
    }
  
    &.green {
      @include border-gradient(rgb(139, 255, 131), rgb(30, 219, 191));
    }
    /* // @include border-gradient(rgb(83, 104, 210), rgb(62, 42, 192)); */

    animation: rotateThis 1s linear infinite;
  }

  &:nth-of-type(3) {
    &.purple {
      @include border-gradient(#5147e1, #3611b9);
    }
  
    &.orange {
      @include border-gradient(rgb(186, 71, 71), rgb(191, 80, 20));
    }
  
    &.yellow {
      @include border-gradient(rgb(251, 243, 0), rgb(205, 190, 61));
    }
  
    &.green {
      @include border-gradient(rgb(49, 201, 38), rgb(79, 218, 132));
    }
  }
  
  &-multiple { @include size(100px); }
  
  &-multiple & {
    @include position(absolute, 0px 0px 0px 0px);
    margin: auto;
    
    &:nth-of-type(1) { animation: psycho 6s linear infinite; }
    &:nth-of-type(2) { animation: psycho 6s linear .1s infinite; }
    &:nth-of-type(3) { animation: psycho 6s linear .25s infinite; }
  }
 
}

@keyframes rotateThis {
  from {
    transform: rotate(0deg) scale(1);
  }
  
  to {
    transform: rotate(360deg) scale(1);
  }
}

@keyframes psycho {
  0% {
    transform: rotate(0deg) scale(0.9) translate(0, 0);
  }
  
  25% {
    transform: rotate(90deg) scale(1.1) translate(0, 0);
  }
  
  50% {
    transform: rotate(180deg) scale(0.9) translate(0, 0);
  }

  75% {
    transform: rotate(270deg) scale(1.1) translate(0, 0);
  }
  
  100% {
    transform: rotate(360deg) scale(0.9) translate(0, 0);
  }
}

.btn {
  border: none;
  display: inline-block;
  background: transparent;
  
  color: rgba(white, .7);
  background: rgba(white, .05);
  text-decoration: none;
  
  padding: 15px 20px;
  
  border-radius: 10px;
  
  transition: all .2s;
  
  @include border-gradient(gray, darkgray);
  
  &:hover {
    @include border-gradient(hotpink, skyblue);
    color: white;
    background: rgba(skyblue, .05);
  }
}


///// OTHER /////

.circles > * {
  display: inline-block; vertical-align: top;
  
  position: relative;
  margin: 0 2%;
}

.circles { 
  transform: translateZ(0); 
  margin-bottom: 100px;
}

@keyframes shake {
  0% { transform: translate(4px, 4px) rotate(0deg); }
  10% { transform: translate(-4px, -5px) rotate(-4deg); }
  20% { transform: translate(-6px, 3px) rotate(4deg); }
  30% { transform: translate(6px, 5px) rotate(0deg); }
  40% { transform: translate(4px, -4px) rotate(4deg); }
  50% { transform: translate(-4px, 5px) rotate(-4deg); }
  60% { transform: translate(-6px, 4px) rotate(0deg); }
  70% { transform: translate(6px, 4px) rotate(-4deg); }
  80% { transform: translate(-4px, -4px) rotate(4deg); }
  90% { transform: translate(4px, 5px) rotate(0deg); }
  100% { transform: translate(4px, -5px) rotate(-4deg); }
}

.shake {
  transition: opacity 100ms ease-in-out;
  /* Start the shake animation and make the animation last for 0.5 seconds */
  animation: shake 1s;

  /* When the animation is finished, start again */
  animation-iteration-count: 5;
}
